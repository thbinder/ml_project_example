# name: staging_pipeline

# on:
#   push:
#     branches:
#       - "master"
    
# jobs:
#   run-staging-workflow:
#     runs-on: ubuntu-latest
#     env:
#       GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
#       ZENML_USERNAME: ${{ secrets.ZENML_USERNAME }}
#       ZENML_PASSWORD: ${{ secrets.ZENML_PASSWORD }}
#       ZENML_HOST: ${{ secrets.ZENML_HOST }}
#       ZENML_DEBUG: true
#       ZENML_ANALYTICS_OPT_IN: false
#       ZENML_LOGGING_VERBOSITY: INFO

#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3

#       - id: 'auth'
#         uses: 'google-github-actions/auth@v1'
#         with:
#           credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

#       - name: 'Cloud SDK Setup'
#         uses: 'google-github-actions/setup-gcloud@v1'

#       - id: install-kubectl
#         uses: azure/setup-kubectl@v3
 
#       - name: Authenticate docker
#         run: |
#           gcloud auth configure-docker --project mlops-demos-376509
        
#       - uses: actions/setup-python@v4
#         with:
#           python-version: '3.8'

#       - uses: syphar/restore-virtualenv@v1
#         id: cache-virtualenv
#         with:
#           requirement_files: 'requirements.txt'

#       - uses: syphar/restore-pip-download-cache@v1
#         if: steps.cache-virtualenv.outputs.cache-hit != 'true'
#         with:
#           requirement_files: 'requirements.txt'
          
#       - name: Install requirements
#         if: steps.cache-virtualenv.outputs.cache-hit != 'true'
#         run: |
#           pip install -r requirements.txt
#       - name: Install wkhtmltopdf
#         run: sudo apt-get install wkhtmltopdf

#       - name: Connect to ZenML server
#         run: |
#           zenml connect --no-verify-ssl --url $ZENML_HOST --username $ZENML_USERNAME --password $ZENML_PASSWORD
#       - name: Set stack
#         run: |
#           zenml stack set gcp-kubeflow-kserve
#       - name: Run pipeline
#         run: |
#           ./scripts/run_gcp_continuous_deployment_pipeline.sh